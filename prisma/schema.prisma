// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model User {
  id            String   @id @default(uuid())
  nome          String
  sobrenome     String
  endereco      String
  email         String   @unique
  senha         String
  telefone      String
  cart          Cart? 
  orders        Order[]
  
  refresh_token RefreshToken?

  @@map("users")
}

model RefreshToken{
  id        String   @id @default(uuid())
  expiresIn Int
  user      User     @relation(fields: [userId],references: [id])
  userId    String   @unique

  @@map("refresh_token")
}

model Supplier {
  id              String      @id @default(uuid())
  nomeDaEmpresa   String
  endereco        String
  contato         String
  email           String      @unique
  senha           String 
  products        Product[]
}

model Product {
  id            String       @id @default(uuid())
  nomeDoProduto String
  descricao     String?
  preco         Float
  estoque       Int
  categoria     String
  supplierId    String
  supplier      Supplier     @relation(fields: [supplierId], references: [id])
  orderItems    OrderItem[]
  carts         Cart[]       @relation("CartProduct")
  imageUrl      String
}

model Order {
  id                String        @id @default(uuid())
  dataDoPedido      DateTime
  status            String
  total             Float
  addressId         String
  userId            String
  user              User         @relation(fields: [userId], references: [id])
  orderItems        OrderItem[]
  address           Address      @relation("AddressToOrder",fields: [addressId],references: [id])
}

model OrderItem {
  id            String   @id @default(uuid())
  quantidade    Int
  precoUnitario Float
  total         Float
  orderId       String
  productId     String
  order         Order   @relation(fields: [orderId], references: [id])
  product       Product @relation(fields: [productId], references: [id])
}

model Cart {
  id        String      @id @default(uuid())
  status    String
  total     Float
  userId    String      @unique
  productId String
  user      User        @relation(fields: [userId], references: [id])
  products  Product[]   @relation("CartProduct")
}

model Address{
  id        String      @id @default(uuid())
  rua       String 
  cidade    String
  estado    String
  cep       String
  orderId   String     
  order     Order[]      @relation("AddressToOrder")  
}