{
  "openapi": "3.0.0",
  "info": {
    "title": "Documentação da API",
		"description":"O objetivo principal desse projeto é economizar tempo e tornar mais conveniente o processo de compra de materiais escolares, aliviando os pais e responsáveis do estresse de visitar várias lojas físicas para fazer suas compras.",
    "version": "1.0.0"
  },
  "paths": {
    "/user": {
      "post": {
        "summary": "Cria um novo usuário.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Dados do usuário a serem criados.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso."
          },
          "400": {
            "description": "Requisição inválida."
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Rota de Login",
        "description": "Efetue login para gerar token de autenticação e criar um refresh token para poder gerar tokens automaticamente sem precisar realizar o login novamente.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login bem-sucedido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Token": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "object",
                      "properties":{
                        "refreshTokenId":{
                          "type":"string"
                        },
                        "expiresIn":{
                          "type":"number",
                          "description":"Esse paramentro é a validade do refresh token, ou seja a quantidade de tempo que ele vai durar."
                        },
                        "userId":{
                          "type":"string"
                        }

                      }
                    },
                    "userId":{
                      "type":"string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Falha na autenticação"
          }
        }
      }
    },
    "/refresh-token": {
      "post": {
        "summary": "Rota de Renovação de Token",
        "description": "Gera novos tokens com base no ID do usuário.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens renovados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "newToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Falha na renovação de token"
          }
        }
      }
    },

    "/suppliers": {
      "post": {
        "summary": "Cria um novo fornecedor.",
        "operationId": "createSupplier",
        "requestBody": {
          "description": "Dados do fornecedor a serem enviados na requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Fornecedor criado com sucesso."
          },
          "400": {
            "description": "Requisição inválida."
          }
        }
      }
    },

    "/supllier/product/add": {
      "post": {
        "summary": "Cria um novo produto",
        "operationId": "createProduct",
        "requestBody": {
          "description": "Dados do produto a serem criados.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref":"#/components/schemas/productInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Produto criado com sucesso."
          },
          "400": {
            "description": "Requisição inválida."
          }
        }
      }
    },
    
    "/product": {
      "get": {
        "summary": "Obtém todos os produtos",
        "responses": {
          "200": {
            "description": "Sucesso"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    

    "/cart": {
      "post": {
        "summary": "Cria um novo carrinho.",
        "operationId": "createCart",
        "requestBody": {
          "description": "Dados do carrinho a serem criados.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Carrinho criado com sucesso."
          },
          "400": {
            "description": "Requisição inválida."
          }
        }
      }
		}
	},

  "components": {
    "schemas": {
      "UserInput": {
        "type": "object",
        "properties": {
						"nome":{
							"type":"string",
							"description":"O nome do usário"
						},
						"email":{
							"type": "string",
      				"format": "email",
      				"description": "O endereço de e-mail do usuário."
						},
						"senha":{
              "type": "string",
      				"description": "Senha do usuário."
						},
						"telefone":{
							"type":"string",
							"description":"Numero de telefone do usuário"
						}
        }
      },
      "SupplierInput": {
        "type": "object",
        "properties": {
					"nomeDaEmpresa":{
						"type":"string",
						"description":"O nome do Fornecedor"
					},
					"contato":{
						"type":"string",
						"description":"Numero de telefone do fornecedor"
					},
					"email":{
						"type":"string",
						"description":"Endereço de email para contato com o fornecedor"
					},
          "senha":{
						"type":"string",
						"description":"Senha do fornecedor"
					},
          "endereco":{
						"type":"object",
						"description":"Dados do endereço",
            "$ref": "#/components/schemas/endereco"
					}
        }
      },
      "CartInput": {
        "type": "object",
        "properties": {
          	"status":{
							"type":"string",
							"description":"O nome do estado do carrinho, aberto ou fechado"
						},
						"total":{
							"type":"float",
							"description":"Valor total do carrinho"
						},
						"userId":{
							"type": "string",
      				"format": "uuid",
      				"description": "Indetificador unico do user"
						}
        }
      },
      "endereco": {
        "type": "object",
        "properties": {
          	"rua":{
							"type":"string",
							"description":"O nome da rua"
						},
						"cidade":{
							"type":"string",
							"description":"Nome da cidade"
						},
						"estado":{
							"type": "string",
      				"description": "Nome do estado"
						},
            "cep":{
							"type": "string",
      				"description": "Numero do cep"
						}

        }
      },
      "productInput":{
        "type": "object",
        "properties": {
          "nomeDoProduto": {
            "type": "string",
            "description": "Nome do produto"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição do produto"
          },
          "preco": {
            "type": "number",
            "description": "Preço do produto"
          },
          "estoque": {
            "type": "integer",
            "description": "Quantidade de estoque"
          },
          "categoria": {
            "type": "string",
            "description": "Categoria do produto"
          },
          "supplierId": {
            "type": "string",
            "description": "ID do fornecedor do produto"
          },
          "imageProduto": {
            "type": "file",
            "description": "Imagem do produto (PNG)"
          }
        }
      }
    }
  }
}
